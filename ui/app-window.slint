import "./ChivoMono-VariableFont_wght.ttf";
import { Button, ComboBox } from "std-widgets.slint";
import { MenuItem } from "./components/menu-item.slint";
import { Switch, Status } from "./components/indicators.slint";
import { SingleForm, TripleForm, Submit } from "./components/forms.slint";
import { ListView } from "std-widgets.slint";

export global AppState {
    callback hide_device(string);
    callback expose_device(string, string, string);
    callback choose_midi_port();
    in property <[string]> midi-ports;

}

export component AppWindow inherits Window {
    in property <[string]> exposed_devices;
    in-out property <brush> bgc: rgb(200,200,200);

    title: "midiserv";
    background: root.bgc;
    min-height: 450px;
    min-width: 500px;
    default-font-family: "Chivo Mono";
    default-font-size: 12px;

    VerticalLayout {
        alignment: start;
        padding: 20px;
        Text {
            text: "midiserv";
            font-size: 30px;
            color:black;
        }
        VerticalLayout {
            padding-top: 20px;
            spacing: 10px;

            MenuItem{text: "connection status"; Status{}}
            MenuItem{text: "passthrough allowed"; Switch{}}
            MenuItem{text: "send dummy cc"; SingleForm{}}
            MenuItem{
                text: "select midi port";
                VerticalLayout{
                        alignment: center;
                        HorizontalLayout {
                            ComboBox {
                                model: AppState.midi-ports;
                            }
                        }
                }
            }
            MenuItem{
                text: "expose device";
                tf := TripleForm{
                placeholders: ["cc#","type","desc"];
                on-clicked =>
                    {AppState.expose_device(tf.tinput1_text, tf.tinput2_text, tf.tinput3_text)}
                }
            }

            currently-exposed := VerticalLayout {
                MenuItem {text: "currently exposed"; Rectangle{} }
                ListView {
                    width: root.width/2;
                    for device in exposed_devices :
                    Submit {
                        text: device;
                        on-clicked => { AppState.hide_device(device) }
                    }
                }
            }
        }
    }
    VerticalLayout {
    alignment: end;
    padding: 20px;
        HorizontalLayout {
            padding-top: 20px;
            spacing: 5px;
            Submit{text: "save file";}
            Submit{text: "load file";}
            Submit{text: "clear all"; background: rgb(248,168,168);}
            Submit{text: "disconnect"; background: rgb(248,168,168);}
        }
    }
}
